{"ast":null,"code":"var _jsxFileName = \"D:\\\\teaching-reactjs-summer-2020-2021-sec-a-main\\\\teaching-reactjs-summer-2020-2021-sec-a-main\\\\practice\\\\src\\\\views\\\\components\\\\buttons\\\\buttons\\\\Buttons.js\";\nimport React from 'react';\nimport { CButton, CCard, CCardBody, CCardHeader, CCol, CRow } from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport { DocsCallout, Example } from 'src/reusable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Buttons = () => {\n  return /*#__PURE__*/_jsxDEV(CRow, {\n    children: [/*#__PURE__*/_jsxDEV(CCol, {\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(DocsCallout, {\n        name: \"Button\",\n        href: \"components/buttons\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(CCard, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"React Button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CCardBody, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-medium-emphasis small\",\n            children: \"CoreUI includes a bunch of predefined buttons components, each serving its own semantic purpose. Buttons show what action will happen when the user clicks or touches it. CoreUI buttons are used to initialize operations, both in the background or foreground of an experience.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Example, {\n            href: \"components/buttons\",\n            children: ['normal', 'active', 'disabled'].map((state, index) => /*#__PURE__*/_jsxDEV(CRow, {\n              className: \"align-items-center mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(CCol, {\n                xs: 12,\n                xl: 2,\n                className: \"mb-3 mb-xl-0\",\n                children: state.charAt(0).toUpperCase() + state.slice(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CCol, {\n                xs: true,\n                children: [['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'].map((color, index) => /*#__PURE__*/_jsxDEV(CButton, {\n                  color: color,\n                  active: state === 'active',\n                  disabled: state === 'disabled',\n                  children: color.charAt(0).toUpperCase() + color.slice(1)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 23\n                }, this)), /*#__PURE__*/_jsxDEV(CButton, {\n                  color: \"link\",\n                  children: \"Link\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(CCard, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"React Button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"with icons\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CCardBody, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-medium-emphasis small\",\n            children: [\"You can combine button with our \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://icons.coreui.io/\",\n              children: \"CoreUI Icons\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 47\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Example, {\n            href: \"components/buttons\",\n            children: ['normal', 'active', 'disabled'].map((state, index) => /*#__PURE__*/_jsxDEV(CRow, {\n              className: \"align-items-center mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(CCol, {\n                xs: 12,\n                xl: 2,\n                className: \"mb-3 mb-xl-0\",\n                children: state.charAt(0).toUpperCase() + state.slice(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CCol, {\n                xs: true,\n                children: [['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'].map((color, index) => /*#__PURE__*/_jsxDEV(CButton, {\n                  color: color,\n                  active: state === 'active',\n                  disabled: state === 'disabled',\n                  children: [/*#__PURE__*/_jsxDEV(CIcon, {\n                    name: \"cil-bell\",\n                    className: \"me-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 25\n                  }, this), color.charAt(0).toUpperCase() + color.slice(1)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 23\n                }, this)), /*#__PURE__*/_jsxDEV(CButton, {\n                  color: \"link\",\n                  children: [/*#__PURE__*/_jsxDEV(CIcon, {\n                    name: \"cil-bell\",\n                    className: \"me-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 23\n                  }, this), \"Link\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(CCard, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"React Button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Button components\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CCardBody, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-medium-emphasis small\",\n            children: [\"The \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"<CButton>\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this), \" component are designed for\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"<button>\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), \" , \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"<a>\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 45\n            }, this), \" or \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"<input>\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 71\n            }, this), ' ', \"elements (though some browsers may apply a slightly different rendering).\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-medium-emphasis small\",\n            children: [\"If you're using \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"<CButton>\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 35\n            }, this), \" component as \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"<a>\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 77\n            }, this), ' ', \"elements that are used to trigger functionality ex. collapsing content, these links should be given a \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"role=\\\"button\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 33\n            }, this), \" to adequately communicate their meaning to assistive technologies such as screen readers.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Example, {\n            href: \"components/buttons#button-components\",\n            children: [/*#__PURE__*/_jsxDEV(CButton, {\n              component: \"a\",\n              color: \"primary\",\n              href: \"#\",\n              role: \"button\",\n              children: \"Link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CButton, {\n              type: \"submit\",\n              color: \"primary\",\n              children: \"Button\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CButton, {\n              component: \"input\",\n              type: \"button\",\n              color: \"primary\",\n              value: \"Input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CButton, {\n              component: \"input\",\n              type: \"submit\",\n              color: \"primary\",\n              value: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CButton, {\n              component: \"input\",\n              type: \"reset\",\n              color: \"primary\",\n              value: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(CCard, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"React Button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"outline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CCardBody, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-medium-emphasis small\",\n            children: [\"If you need a button, but without the strong background colors. Set\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"variant=\\\"outline\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), \" prop to remove all background colors.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Example, {\n            href: \"components/buttons#outline-buttons\",\n            children: ['normal', 'active', 'disabled'].map((state, index) => /*#__PURE__*/_jsxDEV(CRow, {\n              className: \"align-items-center mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(CCol, {\n                xs: 12,\n                xl: 2,\n                className: \"mb-3 mb-xl-0\",\n                children: state.charAt(0).toUpperCase() + state.slice(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CCol, {\n                xs: true,\n                children: ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'].map((color, index) => /*#__PURE__*/_jsxDEV(CButton, {\n                  color: color,\n                  variant: \"outline\",\n                  active: state === 'active',\n                  disabled: state === 'disabled',\n                  children: color.charAt(0).toUpperCase() + color.slice(1)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(CCard, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"React Button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"ghost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CCardBody, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-medium-emphasis small\",\n            children: [\"If you need a ghost variant of button, set \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"variant=\\\"ghost\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 58\n            }, this), \" prop to remove all background colors.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Example, {\n            href: \"components/buttons#ghost-buttons\",\n            children: ['normal', 'active', 'disabled'].map((state, index) => /*#__PURE__*/_jsxDEV(CRow, {\n              className: \"align-items-center mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(CCol, {\n                xs: 12,\n                xl: 2,\n                className: \"mb-3 mb-xl-0\",\n                children: state.charAt(0).toUpperCase() + state.slice(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CCol, {\n                xs: true,\n                children: ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'].map((color, index) => /*#__PURE__*/_jsxDEV(CButton, {\n                  color: color,\n                  variant: \"ghost\",\n                  active: state === 'active',\n                  disabled: state === 'disabled',\n                  children: color.charAt(0).toUpperCase() + color.slice(1)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(CCard, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"React Button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Sizes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CCardBody, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-medium-emphasis small\",\n            children: [\"Larger or smaller buttons? Add \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"size=\\\"lg\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 46\n            }, this), \" or\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"size=\\\"sm\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), \" for additional sizes.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Example, {\n            href: \"components/buttons#sizes\",\n            children: [/*#__PURE__*/_jsxDEV(CButton, {\n              color: \"primary\",\n              size: \"lg\",\n              children: \"Large button\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CButton, {\n              color: \"secondary\",\n              size: \"lg\",\n              children: \"Large button\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Example, {\n            href: \"components/buttons#sizes\",\n            children: [/*#__PURE__*/_jsxDEV(CButton, {\n              color: \"primary\",\n              size: \"sm\",\n              children: \"Small button\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CButton, {\n              color: \"secondary\",\n              size: \"sm\",\n              children: \"Small button\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(CCard, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"React Button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Pill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CCardBody, {\n          children: /*#__PURE__*/_jsxDEV(Example, {\n            href: \"components/buttons#pill-buttons\",\n            children: ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'].map((color, index) => /*#__PURE__*/_jsxDEV(CButton, {\n              color: color,\n              shape: \"rounded-pill\",\n              children: color.charAt(0).toUpperCase() + color.slice(1)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(CCard, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"React Button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Square\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CCardBody, {\n          children: /*#__PURE__*/_jsxDEV(Example, {\n            href: \"components/buttons#square\",\n            children: ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'].map((color, index) => /*#__PURE__*/_jsxDEV(CButton, {\n              color: color,\n              shape: \"rounded-0\",\n              children: color.charAt(0).toUpperCase() + color.slice(1)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(CCard, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"React Button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Disabled state\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CCardBody, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-medium-emphasis small\",\n            children: [\"Add the \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"disabled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 23\n            }, this), \" boolean prop to any \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"<CButton>\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 65\n            }, this), ' ', \"component to make buttons look inactive. Disabled button has\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"pointer-events: none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this), \" applied to, disabling hover and active states from triggering.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Example, {\n            href: \"components/buttons#disabled-state\",\n            children: [/*#__PURE__*/_jsxDEV(CButton, {\n              color: \"primary\",\n              size: \"lg\",\n              disabled: true,\n              children: \"Primary button\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CButton, {\n              color: \"secondary\",\n              size: \"lg\",\n              disabled: true,\n              children: \"Button\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-medium-emphasis small\",\n            children: [\"Disabled buttons using the \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"<a>\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 42\n            }, this), \" component act a little different:\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-medium-emphasis small\",\n            children: [/*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"<a>\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this), \"s don'tsupport the \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"disabled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 60\n            }, this), \" attribute, so CoreUI has to add \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \".disabled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 33\n            }, this), \" className to make buttons look inactive. CoreUI also has to add to the disabled button component\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"aria-disabled=\\\"true\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this), \" attribute to show the state of the component to assistive technologies.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Example, {\n            href: \"components/buttons#disabled-state\",\n            children: [/*#__PURE__*/_jsxDEV(CButton, {\n              component: \"a\",\n              href: \"#\",\n              color: \"primary\",\n              size: \"lg\",\n              disabled: true,\n              children: \"Primary link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CButton, {\n              component: \"a\",\n              href: \"#\",\n              color: \"secondary\",\n              size: \"lg\",\n              disabled: true,\n              children: \"Link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(CCard, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"React Button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Block buttons\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CCardBody, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-medium-emphasis small\",\n            children: \"Create buttons that span the full width of a parent\\u2014by using utilities.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Example, {\n            href: \"components/buttons#block-buttons\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-grid gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(CButton, {\n                color: \"primary\",\n                children: \"Button\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CButton, {\n                color: \"primary\",\n                children: \"Button\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-medium-emphasis small\",\n            children: [\"Here we create a responsive variation, starting with vertically stacked buttons until the \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"md\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 19\n            }, this), \" breakpoint, where \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \".d-md-block\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 53\n            }, this), \" replaces the\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \".d-grid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 15\n            }, this), \" class, thus nullifying the \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"gap-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 63\n            }, this), \" utility. Resize your browser to see them change.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Example, {\n            href: \"components/buttons#block-buttons\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-grid gap-2 d-md-block\",\n              children: [/*#__PURE__*/_jsxDEV(CButton, {\n                color: \"primary\",\n                children: \"Button\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CButton, {\n                color: \"primary\",\n                children: \"Button\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-medium-emphasis small\",\n            children: [\"You can adjust the width of your block buttons with grid column width classes. For example, for a half-width \\\"block button\\\", use \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \".col-6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 69\n            }, this), \". Center it horizontally with \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \".mx-auto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 33\n            }, this), \", too.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Example, {\n            href: \"components/buttons#block-buttons\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-grid gap-2 col-6 mx-auto\",\n              children: [/*#__PURE__*/_jsxDEV(CButton, {\n                color: \"primary\",\n                children: \"Button\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CButton, {\n                color: \"primary\",\n                children: \"Button\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-medium-emphasis small\",\n            children: \"Additional utilities can be used to adjust the alignment of buttons when horizontal. Here we've taken our previous responsive example and added some flex utilities and a margin utility on the button to right align the buttons when they're no longer stacked.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Example, {\n            href: \"components/buttons#block-buttons\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-grid gap-2 d-md-flex justify-content-md-end\",\n              children: [/*#__PURE__*/_jsxDEV(CButton, {\n                color: \"primary\",\n                className: \"me-md-2\",\n                children: \"Button\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CButton, {\n                color: \"primary\",\n                children: \"Button\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Buttons;\nexport default Buttons;\n\nvar _c;\n\n$RefreshReg$(_c, \"Buttons\");","map":{"version":3,"sources":["D:/teaching-reactjs-summer-2020-2021-sec-a-main/teaching-reactjs-summer-2020-2021-sec-a-main/practice/src/views/components/buttons/buttons/Buttons.js"],"names":["React","CButton","CCard","CCardBody","CCardHeader","CCol","CRow","CIcon","DocsCallout","Example","Buttons","map","state","index","charAt","toUpperCase","slice","color"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { CButton, CCard, CCardBody, CCardHeader, CCol, CRow } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { DocsCallout, Example } from 'src/reusable'\n\nconst Buttons = () => {\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <DocsCallout name=\"Button\" href=\"components/buttons\" />\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Button</strong>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              CoreUI includes a bunch of predefined buttons components, each serving its own\n              semantic purpose. Buttons show what action will happen when the user clicks or touches\n              it. CoreUI buttons are used to initialize operations, both in the background or\n              foreground of an experience.\n            </p>\n            <Example href=\"components/buttons\">\n              {['normal', 'active', 'disabled'].map((state, index) => (\n                <CRow className=\"align-items-center mb-3\" key={index}>\n                  <CCol xs={12} xl={2} className=\"mb-3 mb-xl-0\">\n                    {state.charAt(0).toUpperCase() + state.slice(1)}\n                  </CCol>\n                  <CCol xs>\n                    {[\n                      'primary',\n                      'secondary',\n                      'success',\n                      'danger',\n                      'warning',\n                      'info',\n                      'light',\n                      'dark',\n                    ].map((color, index) => (\n                      <CButton\n                        color={color}\n                        key={index}\n                        active={state === 'active'}\n                        disabled={state === 'disabled'}\n                      >\n                        {color.charAt(0).toUpperCase() + color.slice(1)}\n                      </CButton>\n                    ))}\n                    <CButton color=\"link\">Link</CButton>\n                  </CCol>\n                </CRow>\n              ))}\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Button</strong> <small>with icons</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              You can combine button with our <a href=\"https://icons.coreui.io/\">CoreUI Icons</a>.\n            </p>\n            <Example href=\"components/buttons\">\n              {['normal', 'active', 'disabled'].map((state, index) => (\n                <CRow className=\"align-items-center mb-3\" key={index}>\n                  <CCol xs={12} xl={2} className=\"mb-3 mb-xl-0\">\n                    {state.charAt(0).toUpperCase() + state.slice(1)}\n                  </CCol>\n                  <CCol xs>\n                    {[\n                      'primary',\n                      'secondary',\n                      'success',\n                      'danger',\n                      'warning',\n                      'info',\n                      'light',\n                      'dark',\n                    ].map((color, index) => (\n                      <CButton\n                        color={color}\n                        key={index}\n                        active={state === 'active'}\n                        disabled={state === 'disabled'}\n                      >\n                        <CIcon name=\"cil-bell\" className=\"me-2\" />\n                        {color.charAt(0).toUpperCase() + color.slice(1)}\n                      </CButton>\n                    ))}\n                    <CButton color=\"link\">\n                      <CIcon name=\"cil-bell\" className=\"me-2\" />\n                      Link\n                    </CButton>\n                  </CCol>\n                </CRow>\n              ))}\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Button</strong> <small>Button components</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              The <code>&lt;CButton&gt;</code> component are designed for{' '}\n              <code>&lt;button&gt;</code> , <code>&lt;a&gt;</code> or <code>&lt;input&gt;</code>{' '}\n              elements (though some browsers may apply a slightly different rendering).\n            </p>\n            <p className=\"text-medium-emphasis small\">\n              If you&#39;re using <code>&lt;CButton&gt;</code> component as <code>&lt;a&gt;</code>{' '}\n              elements that are used to trigger functionality ex. collapsing content, these links\n              should be given a <code>role=&#34;button&#34;</code> to adequately communicate their\n              meaning to assistive technologies such as screen readers.\n            </p>\n            <Example href=\"components/buttons#button-components\">\n              <CButton component=\"a\" color=\"primary\" href=\"#\" role=\"button\">\n                Link\n              </CButton>\n              <CButton type=\"submit\" color=\"primary\">\n                Button\n              </CButton>\n              <CButton component=\"input\" type=\"button\" color=\"primary\" value=\"Input\" />\n              <CButton component=\"input\" type=\"submit\" color=\"primary\" value=\"Submit\" />\n              <CButton component=\"input\" type=\"reset\" color=\"primary\" value=\"Reset\" />\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Button</strong> <small>outline</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              If you need a button, but without the strong background colors. Set{' '}\n              <code>variant=&#34;outline&#34;</code> prop to remove all background colors.\n            </p>\n            <Example href=\"components/buttons#outline-buttons\">\n              {['normal', 'active', 'disabled'].map((state, index) => (\n                <CRow className=\"align-items-center mb-3\" key={index}>\n                  <CCol xs={12} xl={2} className=\"mb-3 mb-xl-0\">\n                    {state.charAt(0).toUpperCase() + state.slice(1)}\n                  </CCol>\n                  <CCol xs>\n                    {[\n                      'primary',\n                      'secondary',\n                      'success',\n                      'danger',\n                      'warning',\n                      'info',\n                      'light',\n                      'dark',\n                    ].map((color, index) => (\n                      <CButton\n                        color={color}\n                        variant=\"outline\"\n                        key={index}\n                        active={state === 'active'}\n                        disabled={state === 'disabled'}\n                      >\n                        {color.charAt(0).toUpperCase() + color.slice(1)}\n                      </CButton>\n                    ))}\n                  </CCol>\n                </CRow>\n              ))}\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Button</strong> <small>ghost</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              If you need a ghost variant of button, set <code>variant=&#34;ghost&#34;</code> prop\n              to remove all background colors.\n            </p>\n            <Example href=\"components/buttons#ghost-buttons\">\n              {['normal', 'active', 'disabled'].map((state, index) => (\n                <CRow className=\"align-items-center mb-3\" key={index}>\n                  <CCol xs={12} xl={2} className=\"mb-3 mb-xl-0\">\n                    {state.charAt(0).toUpperCase() + state.slice(1)}\n                  </CCol>\n                  <CCol xs>\n                    {[\n                      'primary',\n                      'secondary',\n                      'success',\n                      'danger',\n                      'warning',\n                      'info',\n                      'light',\n                      'dark',\n                    ].map((color, index) => (\n                      <CButton\n                        color={color}\n                        variant=\"ghost\"\n                        key={index}\n                        active={state === 'active'}\n                        disabled={state === 'disabled'}\n                      >\n                        {color.charAt(0).toUpperCase() + color.slice(1)}\n                      </CButton>\n                    ))}\n                  </CCol>\n                </CRow>\n              ))}\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Button</strong> <small>Sizes</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Larger or smaller buttons? Add <code>size=&#34;lg&#34;</code> or{' '}\n              <code>size=&#34;sm&#34;</code> for additional sizes.\n            </p>\n            <Example href=\"components/buttons#sizes\">\n              <CButton color=\"primary\" size=\"lg\">\n                Large button\n              </CButton>\n              <CButton color=\"secondary\" size=\"lg\">\n                Large button\n              </CButton>\n            </Example>\n            <Example href=\"components/buttons#sizes\">\n              <CButton color=\"primary\" size=\"sm\">\n                Small button\n              </CButton>\n              <CButton color=\"secondary\" size=\"sm\">\n                Small button\n              </CButton>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Button</strong> <small>Pill</small>\n          </CCardHeader>\n          <CCardBody>\n            <Example href=\"components/buttons#pill-buttons\">\n              {[\n                'primary',\n                'secondary',\n                'success',\n                'danger',\n                'warning',\n                'info',\n                'light',\n                'dark',\n              ].map((color, index) => (\n                <CButton color={color} shape=\"rounded-pill\" key={index}>\n                  {color.charAt(0).toUpperCase() + color.slice(1)}\n                </CButton>\n              ))}\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Button</strong> <small>Square</small>\n          </CCardHeader>\n          <CCardBody>\n            <Example href=\"components/buttons#square\">\n              {[\n                'primary',\n                'secondary',\n                'success',\n                'danger',\n                'warning',\n                'info',\n                'light',\n                'dark',\n              ].map((color, index) => (\n                <CButton color={color} shape=\"rounded-0\" key={index}>\n                  {color.charAt(0).toUpperCase() + color.slice(1)}\n                </CButton>\n              ))}\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Button</strong> <small>Disabled state</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Add the <code>disabled</code> boolean prop to any <code>&lt;CButton&gt;</code>{' '}\n              component to make buttons look inactive. Disabled button has{' '}\n              <code>pointer-events: none</code> applied to, disabling hover and active states from\n              triggering.\n            </p>\n            <Example href=\"components/buttons#disabled-state\">\n              <CButton color=\"primary\" size=\"lg\" disabled>\n                Primary button\n              </CButton>\n              <CButton color=\"secondary\" size=\"lg\" disabled>\n                Button\n              </CButton>\n            </Example>\n            <p className=\"text-medium-emphasis small\">\n              Disabled buttons using the <code>&lt;a&gt;</code> component act a little different:\n            </p>\n            <p className=\"text-medium-emphasis small\">\n              <code>&lt;a&gt;</code>s don&#39;tsupport the <code>disabled</code> attribute, so\n              CoreUI has to add <code>.disabled</code> className to make buttons look inactive.\n              CoreUI also has to add to the disabled button component{' '}\n              <code>aria-disabled=&#34;true&#34;</code> attribute to show the state of the component\n              to assistive technologies.\n            </p>\n            <Example href=\"components/buttons#disabled-state\">\n              <CButton component=\"a\" href=\"#\" color=\"primary\" size=\"lg\" disabled>\n                Primary link\n              </CButton>\n              <CButton component=\"a\" href=\"#\" color=\"secondary\" size=\"lg\" disabled>\n                Link\n              </CButton>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Button</strong> <small>Block buttons</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Create buttons that span the full width of a parent—by using utilities.\n            </p>\n            <Example href=\"components/buttons#block-buttons\">\n              <div className=\"d-grid gap-2\">\n                <CButton color=\"primary\">Button</CButton>\n                <CButton color=\"primary\">Button</CButton>\n              </div>\n            </Example>\n            <p className=\"text-medium-emphasis small\">\n              Here we create a responsive variation, starting with vertically stacked buttons until\n              the <code>md</code> breakpoint, where <code>.d-md-block</code> replaces the{' '}\n              <code>.d-grid</code> class, thus nullifying the <code>gap-2</code> utility. Resize\n              your browser to see them change.\n            </p>\n            <Example href=\"components/buttons#block-buttons\">\n              <div className=\"d-grid gap-2 d-md-block\">\n                <CButton color=\"primary\">Button</CButton>\n                <CButton color=\"primary\">Button</CButton>\n              </div>\n            </Example>\n            <p className=\"text-medium-emphasis small\">\n              You can adjust the width of your block buttons with grid column width classes. For\n              example, for a half-width &#34;block button&#34;, use <code>.col-6</code>. Center it\n              horizontally with <code>.mx-auto</code>, too.\n            </p>\n            <Example href=\"components/buttons#block-buttons\">\n              <div className=\"d-grid gap-2 col-6 mx-auto\">\n                <CButton color=\"primary\">Button</CButton>\n                <CButton color=\"primary\">Button</CButton>\n              </div>\n            </Example>\n            <p className=\"text-medium-emphasis small\">\n              Additional utilities can be used to adjust the alignment of buttons when horizontal.\n              Here we&#39;ve taken our previous responsive example and added some flex utilities and\n              a margin utility on the button to right align the buttons when they&#39;re no longer\n              stacked.\n            </p>\n            <Example href=\"components/buttons#block-buttons\">\n              <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\n                <CButton color=\"primary\" className=\"me-md-2\">\n                  Button\n                </CButton>\n                <CButton color=\"primary\">Button</CButton>\n              </div>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Buttons\n"]},"metadata":{},"sourceType":"module"}